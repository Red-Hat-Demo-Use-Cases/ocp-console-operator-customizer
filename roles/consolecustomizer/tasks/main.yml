---

- name: Get the active skin from ConsoleCustomizer
  kubernetes.core.k8s_info:
    api_version: ocp-console-customizer.dovid/v1alpha1
    kind: ConsoleCustomizerSkin
    name: "{{active_skin}}"
  register: reg_active_skin

- name: Create the console notification
  kubernetes.core.k8s:
    definition:
      apiVersion: console.openshift.io/v1
      kind: ConsoleNotification
      metadata:
        name: '{{ ansible_operator_meta.name }}-occ-banner'
        namespace: '{{ ansible_operator_meta.namespace }}'
      spec:
        text: "{{reg_active_skin.resources[0].spec.title}}"
        color: "{{reg_active_skin.resources[0].spec.textColor}}"
        backgroundColor: "{{reg_active_skin.resources[0].spec.backgroundColor}}"

- name: Create configmap using server side apply
  kubernetes.core.k8s:
    namespace: openshift-config
    definition:
      apiVersion: v1
      kind: ConfigMap
      metadata:
        name: console-custom-logo
      binaryData:
        console-custom-logo: "{{reg_active_skin.resources[0].spec.logo}}"
    append_hash: true
    apply: yes
    server_side_apply:
      field_manager: ansible
  # when: reg_active_skin.resources[0].spec.logo != ""

- name: patch the console logo
  kubernetes.core.k8s_json_patch:
    api_version: operator.openshift.io/v1
    kind: Console
    name: cluster
    patch:
      - op: add
        path: /spec/customization/customLogoFile/name
        value: "console-custom-logo"
      - op: add
        path: /spec/customization/customLogoFile/key
        value: "console-custom-logo"

  # when: reg_active_skin.resources[0].spec.logo != ""

# - name: Delete configmap using server side apply
#   kubernetes.core.k8s:
#     state: absent
#     namespace: openshift-config
#     definition:
#       apiVersion: v1
#       kind: ConfigMap
#       metadata:
#         name: console-custom-logo
#   when: reg_active_skin.resources[0].spec.logo == ""

# - name: delete the console logo
#   kubernetes.core.k8s_json_patch:
#     api_version: operator.openshift.io/v1
#     kind: Console
#     name: cluster
#     patch:
#       - op: remove
#         path: /spec/customization/customLogoFile/name
#         value: "console-custom-logo"
#       - op: remove
#         path: /spec/customization/customLogoFile/key
#         value: "console-custom-logo"
#   when: reg_active_skin.resources[0].spec.logo == ""
